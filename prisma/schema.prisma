generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String?  @unique
  image     String?
  role      Role     @default(USER)
}

model Customer {
  id       String    @id @default(uuid())
  email    String?   @unique
  phone    String?
  name     String?
  lastName String?
  status   Status    @default(ACTIVE)
  logo     String?
  notes    String?
  username String?
  address  String?
  projects Project[]
}

model Project {
  id            String         @id @default(uuid())
  name          String
  location      String?
  startDate     DateTime       @default(now())
  endDate       DateTime?
  description   String?
  address       String?
  customer      Customer?      @relation(fields: [id], references: [id])
  collaborators Collaborator[]
  type          ProjectType?    @relation(fields: [typeId], references: [id])
  typeId        String         
  notes         String?
  documents     Document[]
}

model Task {
  id             String        @id @default(uuid())
  name           String?
  type           TaskType      @relation(fields: [typeId], references: [id])
  typeId         String        @unique
}

model ProjectType {
  id      String    @id @default(uuid())
  type    ProjectTypeEnum
  Project Project[]
}

model TaskType {
  id   String @id @default(uuid())
  name String
  Task Task[]
}

model CollaboratorType {
  id           String         @id @default(uuid())
  type         CollaboratorTypeEnum
  Collaborator Collaborator[]
}

model Collaborator {
  id       String           @id @default(uuid())
  name     String
  lastName String?
  avatar   String?
  projects Project[]
  type     CollaboratorType @relation(fields: [typeId], references: [id])
  typeId   String           
}

model Document {
  id       String  @id @default(uuid())
  number    String
  link      String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String

}

enum Role {
  USER
  ADMIN
}

 enum CollaboratorTypeEnum {
  RESPONSIBLE
  ASSISTANT
  ON_FIELD
}

enum ProjectTypeEnum {
  REPORTES_CURVAS
  PLANO_CATASTRO
}

enum Status {
  ACTIVE
  INACTIVE
}
